[
    {
        "text": "Учитывая массив целых чисел nums и целое число target, верните индексы двух чисел так, чтобы они составляли в сумме target .Вы можете предположить, что каждый вход будет иметь ровно одно решение , и вы не можете использовать один и тот же элемент дважды.Вы можете вернуть ответ в любом порядке. Например: Ввод: nums = [ 2, 7, 11, 15 ], target = 9 Вывод: [ 0, 1 ] Объяснение: Поскольку nums[ 0 ] + nums[ 1 ] == 9, мы возвращаем [ 0, 1 ].",
        "testCases": [
            {
                "input": "[ 2, 7, 11, 15 ] 9",
                "output": [
                    0,
                    1
                ]
            },
            {
                "input": "[ 3, 2, 4 ] 6",
                "output": [
                    1,
                    2
                ]
            },
            {
                "input": "[3,3] 6",
                "output": [
                    0,
                    1
                ]
            },
            {
                "input": "[2,4,6,9,3] 5",
                "output": [
                    0,
                    4
                ]
            }
        ]
    },
    {
        "text": "Дана строка s, найдите длину самой длинной подстроки без повторяющихся символов. S состоит из английских букв, цифр, символов и пробелов. Пример: Ввод: s = 'abcabcbb' Вывод: 3 Объяснение: Ответ 'abc', длина 3. ",
        "testCases": [
            {
                "input": " abcabcbb ",
                "output": 3
            },
            {
                "input": "bbbb",
                "output": 1
            },
            {
                "input": "pwwkew",
                "output": 3
            },
            {
                "input": "skleel",
                "output": 4
            }
        ]
    },
    {
        "text": "Учитывая целое число x, вернуть, true если x этопалиндром, и false в противном случае. Пример:Ввод: x = 121Вывод: trueОбъяснение: 121 читается как 121 слева направо и справа налево.",
        "testCases": [
            {
                "input": "121",
                "output": true
            },
            {
                "input": "-121",
                "output": false
            },
            {
                "input": "10",
                "output": false
            },
            {
                "input": "1221",
                "output": true
            }
        ]
    },
    {
        "text": "Учитывая отсортированный массив различных целых чисел и целевое значение, вернуть индекс, если цель найдена. Если нет, верните индекс туда, где он был бы, если бы он был вставлен по порядку. Пример:Ввод: числа = [1,3,5,6], цель = 5 Вывод: 2",
        "testCases": [
            {
                "input": "[1,3,5,6] 5",
                "output": 2
            },
            {
                "input": "[1,3,5,6] 2",
                "output": 1
            },
            {
                "input": "[1,3,5,6] 7",
                "output": 4
            },
            {
                "input": "[1,3,5,6] 4",
                "output": 2
            }
        ]
    },
    {
        "text": "Учитывая массив nums различных целых чисел, вернуть все возможные перестановки. Вы можете вернуть ответ в любом порядке. Пример:Ввод: nums = [1,2,3] Вывод: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]] ",
        "testCases": [
            {
                "input": "[1,2,3]",
                "output": [
                    [
                        1,
                        2,
                        3
                    ],
                    [
                        1,
                        3,
                        2
                    ],
                    [
                        2,
                        1,
                        3
                    ],
                    [
                        2,
                        3,
                        1
                    ],
                    [
                        3,
                        1,
                        2
                    ],
                    [
                        3,
                        2,
                        1
                    ]
                ]
            },
            {
                "input": "[0,1]",
                "output": [
                    [
                        0,
                        1
                    ],
                    [
                        1,
                        0
                    ]
                ]
            },
            {
                "input": "[1]",
                "output": [
                    [
                        1
                    ]
                ]
            }
        ]
    }
]